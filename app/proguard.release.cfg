-ignorewarnings
#-dontoptimize
#-dontobfuscate
-dontskipnonpubliclibraryclasses
-dontskipnonpubliclibraryclassmembers

-optimizationpasses 5  # this increases test cycle time considerably (to ~1m20s)

# According to proguard-android-optimize.txt in SDK, code/simplification/arithmetic
# can be turned on for Android 2.0+.
-optimizations !code/simplification/cast,!field/*,!class/merging/*,!code/allocation/variable

# useless for Android according to docs
-dontpreverify

-ignorewarnings

-allowaccessmodification
-renamesourcefileattribute SourceFile
-repackageclasses ''

-keepattributes *Annotation*,Signature

-printmapping map.txt
-printseeds seed.txt


# Preserve the special static methods that are required in all enumeration classes.
-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }

-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class com.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-keep public class * extends android.view.View { public <init>(android.content.Context); public <init>(android.content.Context, android.util.AttributeSet); public <init>(android.content.Context, android.util.AttributeSet, int); public void set*(...); }

-keepclassmembers class * extends android.app.Activity { public void *(android.view.View); }


# Explicitly preserve all serialization members. The Serializable interface
# is only a marker interface, so it wouldn't save them.
-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# Preserve all native method names and the names of their classes.
-keepclasseswithmembernames class * {
    native <methods>;
}

# Preserve static fields of inner classes of R classes that might be accessed
# through introspection.
-keepclassmembers class **.R$* {
  public static <fields>;
}


# Some class fields may be introspected, so keep them.
# Here using -keep would NOT work, that's result of several days' tinkering.
# With this the obfuscated app will actually work!
-keepclassmembers public class * {
    public protected *;
}

-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}
